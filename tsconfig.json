{
  "extends": "@tsconfig/svelte/tsconfig.json",
  "$schema": "https://json.schemastore.org/tsconfig",
  "display": "Svelte",
  "_version": "3.0.0",

  "compilerOptions": {
    "moduleResolution": "node",
    "target": "es2017",
    "useDefineForClassFields": true,
    "resolveJsonModule": true,
    "baseUrl": ".",
    /**
      Svelte Preprocess cannot figure out whether you have a value or a type, so tell TypeScript
      to enforce using `import type` instead of `import` for Types.
     */
    "importsNotUsedAsValues": "error",
    /**
      TypeScript doesn't know about import usages in the template because it only sees the
      script of a Svelte file. Therefore preserve all value imports. Requires TS 4.5 or higher.
     */
    "preserveValueImports": true,
    "isolatedModules": true,
    /**
      To have warnings/errors of the Svelte compiler at the correct position,
      enable source maps by default.
     */
    "sourceMap": true,

    "strict": false,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    
    /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable checkJs if you'd like to use dynamic types in JS.
     * Note that setting allowJs false does not prevent the use
     * of JS in `.svelte` files.
     */
     "allowJs": true,
     "checkJs": true
  
  }
,
  "include": ["src/**/*.d.ts", "src/**/*.ts", "src/**/*.js", "src/**/*.svelte"]
}